{"version":3,"sources":["components/Player.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Player","componentDidMount","props","id","addEventListener","e","key","preventDefault","index","parseInt","nextPlayer","document","querySelector","focus","firstRoll","createFrames","rolls","map","roll","i","className","name","type","value","onChange","handleUpdateRoll","ref","input","autoAdvance","determineNextFocus","target","toUpperCase","sumFrames","nonBonusFramesCount","message","rollsAsStrings","rollsAsNumbers","match","rollsAsNumbersWithoutNulls","filter","filterOutNulls","slice","length","extraPoints","forEach","char","nonBonusRolls","reduce","sum","current","sumAllFrames","framesToCount","directFocusToChild","querySelectorAll","push","nextRollIndex","lastNumber","ids","split","rollIndex","playerIndex","determineNextFocusLastFrame","click","onClick","this","playerName","handleNameChange","placeholder","autoFocus","handleDeletePlayer","clearScore","unused","sumFramesFunction","React","Component","_","require","Game","makeAllRolls","newPlayer","state","players","cloneDeep","handleAddPlayer","playersCopy","setState","splice","addPlayerButton","toggleAutoAdvance","checked","player","App","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.611a0c2e.chunk.js","sourcesContent":["import React from 'react'\n// import {URL, HEADERS} from '../constants'\n\nexport default class Player extends React.Component{\n\n  componentDidMount = () => { // takes user through all nameInputs and then to the game\n    // this[`name-${this.props.id}`].focus()\n    this[`name-${this.props.id}`].addEventListener('keydown',e =>{\n      if(e.key===\"Tab\" || e.key===\"Enter\"){\n        e.preventDefault()\n        const index = parseInt(this.props.id)\n        const nextPlayer = document.querySelector(`#name-${index + 1}`)\n        if(nextPlayer){nextPlayer.focus()}\n        else{\n          const firstRoll = document.querySelector(\"#roll-0-0\")\n          if(firstRoll){firstRoll.focus()}\n        }\n      }\n    })\n  }\n\n  id = (index) => `${this.props.id}-${index}`\n\n  createFrames = () => {\n    return this.props.rolls.map( (roll,i) =>{\n      return <span className='roll' key={this.id(i)}>\n        <input id={`roll-${this.id(i)}`} key={this.id(i)} name='roll' type='text' value={this.props.rolls[i]} \n        onChange={this.handleUpdateRoll} ref={input => this[`roll-${this.id(i)}`] = input} \n        // disabled={( (this.props.rolls[i-1]==='X' && i<19)) ? true : false} \n        // placeholder={this.id(i)}\n        />\n      </span>\n    })\n  }\n\n  handleUpdateRoll = (e) => {\n    this.props.handleUpdateRoll(e)\n    if(this.props.autoAdvance){\n      this.determineNextFocus(e, e.target.value.toUpperCase())\n    }\n  }\n\n  sumFrames = (nonBonusFramesCount = 20, message = 'Start Game') => {\n    const rollsAsStrings = [...this.props.rolls]\n    const rollsAsNumbers = rollsAsStrings.map((roll,i)=>{\n      if(roll.match(/[0-9]/)){return parseInt(roll)}\n      else if(roll==='X'){return 10}\n      else if(roll==='/'){return (10 - parseInt(rollsAsStrings[i-1]))}\n      else{return null}\n    })\n    const rollsAsNumbersWithoutNulls = rollsAsNumbers.filter(filterOutNulls) // WithoutNulls versions allow easy traversal for spare and strike bonus points\n\n    if(rollsAsNumbers.slice(0,nonBonusFramesCount).filter(filterOutNulls).length > 0){ // otherwise this block throws an error\n\n      let extraPoints = 0 // ISSUE! Doesn't count 0 / or X as extras\n      rollsAsStrings.slice(0,nonBonusFramesCount).filter(filterOutNulls).forEach((char,i) => {\n        if(char==='X'){\n          extraPoints += ((rollsAsNumbersWithoutNulls[i+1] || 0) + (rollsAsNumbersWithoutNulls[i+2] || 0)) // trailing 0s prevent NaN return for incomplete game\n        }else if(char==='/'){\n          extraPoints += (rollsAsNumbersWithoutNulls[i+1] || 0) // trailing 0s prevent NaN return for incomplete game\n        }\n      })\n\n      const nonBonusRolls = rollsAsNumbers.slice(0,nonBonusFramesCount) // .splice(0,18) good for strike on 18, otherwise .splice(0,20)\n      return nonBonusRolls.reduce((sum, current)=>sum+current) + extraPoints\n\n    }else{return message}\n\n    function filterOutNulls(char){\n      return !!char || char===0\n    }\n  }\n\n  sumAllFrames = (message = 'Start Game') => {\n    const framesToCount = this.props.rolls[18]==='X' ? 19 : 20\n    return this.sumFrames(framesToCount, message)\n  }\n\n  directFocusToChild = (e) => {\n    let rolls = []\n    e.target.querySelectorAll('.roll input').forEach(input=>rolls.push(input.value))\n    if(rolls.length===21){\n      rolls = rolls.map((roll,i)=>{\n        if( ((i%2===0 || i===19) && roll.match(/[0-9x]/i) ) || // only the first throw/roll of each frame can have a strike X except the last frame\n        ((i%2===1) && roll.match(/[0-9/]/)) // 2nd throws/rolls of each frames can have spares / but not strikes X\n      ){return roll}\n      else{return ''}\n      })\n      rolls = rolls.filter((roll, i) => roll || rolls[i+1])\n      const lastNumber = rolls[rolls.length-1]\n      let nextRollIndex;\n      if(rolls.length >= 20){ nextRollIndex = 20 }\n      else if(lastNumber && lastNumber.match(/X/i)){ nextRollIndex = rolls.length + 1 }\n      else{ nextRollIndex = rolls.length}\n      // // let nextRollIndex = (lastNumber && lastNumber.match(/X/i)) ? rolls.length + 1 : rolls.length\n      // if(nextRollIndex>20){nextRollIndex=20}\n\n      this[`roll-${this.props.id}-${nextRollIndex}`].focus()\n    }\n  }\n\n  determineNextFocus = (e, lastNumber) => {\n    if(lastNumber===''){return}\n    const ids = e.target.id.split('-')\n    const rollIndex = parseInt(ids[2])\n    const playerIndex = parseInt(ids[1])\n    if(rollIndex>=18){this.determineNextFocusLastFrame(e, lastNumber)}\n    else if(rollIndex%2===1 || lastNumber.toUpperCase()==='X'){\n      const nextPlayer = document.querySelector(`#player-${playerIndex + 1}`)\n      if(nextPlayer){nextPlayer.click()}\n      else(document.querySelector(\"#player-0\").click())\n    }else{\n      this[`roll-${playerIndex}-${rollIndex+1}`].focus()\n    }\n  }\n  \n  determineNextFocusLastFrame = (e, lastNumber) => {\n    const ids = e.target.id.split('-')\n    const rollIndex = parseInt(ids[2])\n    const playerIndex = parseInt(ids[1])\n\n    if( rollIndex === 18 || (rollIndex===19 && (lastNumber.match(/\\//) || this.props.rolls[18].match(/X/i)))){\n      this[`roll-${playerIndex}-${rollIndex + 1}`].focus()\n    }else{\n      const nextPlayer = document.querySelector(`#player-${playerIndex + 1}`)\n      if(nextPlayer){nextPlayer.click()}\n      else(document.querySelector(\"#player-0\")).click()   \n    }\n  }\n\n  // isGameFinished = () => {\n  //   const rolls = this.props.rolls\n  //   return (\n  //     rolls[20] || (rolls[19] && rolls[19]!=='/' &&\n  //     rolls[18] && rolls[18]!=='X')\n  //   )\n  // }\n\n  // saveGame = () => {\n  //   fetch(`${URL}/bowling`,{\n  //     method: 'POST',\n  //     headers: HEADERS,\n  //     body: JSON.stringify({\n  //       name: 'James',\n  //       total: '100'\n  //     })\n  //   })\n  //   .then(r => r.json())\n  //   .then(r => console.log(r))\n  // }\n\n  render(){\n    return(\n      <div className=\"player\" onClick={this.directFocusToChild} id={`player-${this.props.id}`}>\n        <input value={this.props.playerName} name='nameInput' id={`name-${this.props.id}`} className='nameInput'\n        onChange={this.props.handleNameChange} placeholder={`Player ${this.props.id+1}`} ref={input => this[`name-${this.props.id}`] = input} \n        autoFocus\n        />\n        <button onClick={() => this.props.handleDeletePlayer(this.props.id)}>Delete {this.props.playerName}</button>\n        <button className='clearScoreButton' onClick={() => this.props.clearScore(this.props.id)}>Clear Score</button>\n        <div className='playerGame'>\n          {this.createFrames()}\n          <span className='sum'>\n            <p>{this.sumAllFrames()}</p>\n            {/* {this.isGameFinished() ? <button onClick={this.saveGame}>Save Game</button> : null } */}\n          </span>\n          {this.props.rolls.slice((this.props.rolls.length + 1) / 2).map((unused, i)=>{\n            const sumFramesFunction = (i === 9) ? this.sumAllFrames('-') : this.sumFrames(i*2+2, '-')\n            return <div key={i} id={i}>{!!this.props.rolls[i*2] ? sumFramesFunction : '-'}</div>\n          })}\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport Player from './Player'\n// import {URL} from '../constants'\n\nvar _ = require('lodash');\n\nexport default class Game extends React.Component{\n\n  makeAllRolls = () => {\n    const rolls = []\n    for(let i=0;i<(10*2)+1;i++){ rolls.push('') } // 10 frames of 2 throws/rolls max, plus 2 extra at the end\n    return [...rolls]\n  }\n\n  newPlayer = (name = '') => ({name:name,rolls:this.makeAllRolls()})\n\n  state = {\n    players: [\n      _.cloneDeep(this.newPlayer('Tejal')),\n      _.cloneDeep(this.newPlayer('Nick'))\n    ],\n    autoAdvance: true,\n    // leaderBoard: []\n  }\n\n  // componentDidMount = () => {\n  //   fetch(`${URL}/bowling`)\n  //   .then(r=>r.json())\n  //   .then(r => {\n  //     if(r.length > 0 && r[0].name){\n  //       this.setState({leaderBoard: r})\n  //     }\n  //   })\n  // }\n\n  handleAddPlayer = () => {\n    const playersCopy = [...this.state.players] // only shallow copy needed\n    playersCopy.push(_.cloneDeep(this.newPlayer()))\n    this.setState({players: playersCopy})\n  }\n\n  handleNameChange = (e) => {\n    const index = parseInt(e.target.id.split('-')[1])\n    const playersCopy = _.cloneDeep(this.state.players) // deep copy needed\n    playersCopy[index].name = e.target.value\n    this.setState({players: playersCopy})\n  }\n\n  handleDeletePlayer = (index) => {\n    const playersCopy = [...this.state.players]\n    playersCopy.splice(index, 1)\n    this.setState({players: playersCopy})\n  }\n\n  handleUpdateRoll = (e) => { // keyDown eventListeners don't work on Android\n    const lastNumber = e.target.value[e.target.value.length -1] || '' // the '' is for delete button\n    const id = e.target.id.split('-')\n    const playerIndex = parseInt(id[1])\n    const rollIndex = parseInt(id[2])\n    if( ((rollIndex%2===0 || rollIndex===19) && lastNumber.match(/[0-9x]/i) ) || // only the first throw/roll of each frame can have a strike X except the last frame\n      ( (rollIndex%2===1 || rollIndex===20) && lastNumber.match(/[0-9/]/) ) || // 2nd throws/rolls of each frames can have spares / but not strikes X\n      lastNumber === ''\n    ) {\n      const playersCopy = _.cloneDeep(this.state.players)\n      playersCopy[playerIndex].rolls[rollIndex] = lastNumber.toUpperCase()\n      this.setState({players: playersCopy})\n    }\n  }\n\n  addPlayerButton = <button onClick={this.handleAddPlayer} className='addPlayerButton'>Add Player</button>\n\n  toggleAutoAdvance = () => this.setState({autoAdvance: !this.state.autoAdvance})\n\n  clearScore = (playerIndex) => {\n    const playersCopy = _.cloneDeep(this.state.players)\n    playersCopy[playerIndex].rolls = this.makeAllRolls()\n    this.setState({players: playersCopy})\n  }\n\n  render(){\n    return(\n      <div className='game'>\n        {this.addPlayerButton}\n        <span className='autoAdvanceContainer' onClick={this.toggleAutoAdvance}>\n          <p>Auto-Advance</p>\n          <input type='checkbox' checked={this.state.autoAdvance} onChange={this.toggleAutoAdvance} />\n          <span><span/></span>\n        </span>\n        {this.state.players.map((player, i)=>< Player playerName={player.name} rolls={player.rolls} key={i} id={i} \n          handleNameChange={this.handleNameChange} handleDeletePlayer={this.handleDeletePlayer}\n          handleUpdateRoll={this.handleUpdateRoll} autoAdvance={this.state.autoAdvance}\n          clearScore={this.clearScore}\n          />)}\n        {this.state.players.length > 3 ? this.addPlayerButton : null}\n        {/* {this.state.leaderBoard[0] ? this.state.leaderBoard.map(game=>{\n          return <p>{`${game.name} - ${game.total}`}</p>\n        }) : null} */}\n      </div>\n    )\n  }\n\n}","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1>Bowling Score</h1>\n      <div className='instructions'>\n        <h2>Scoring Rules</h2>\n        <p>Each \"frame\" is two attempts (\"throws\") to knock down the 10 pins. A game has 10 frames.</p>\n        <table>\n        <tbody>\n          <tr>\n            <th>Name</th><th>Symbol</th><th>Meaning</th><th>Scoring</th>\n          </tr>\n          <tr>\n            <td>Strike</td><td>X</td><td>You knocked down all 10 pins on the first throw of a frame.</td><td>10 + the number of pins knocked down on your next 2 throws</td>\n          </tr>\n          <tr>\n            <td>Spare</td><td>/</td><td>You knocked down all 10 pins on the second throw.</td><td>10 for the frame + the number of pins knocked down on your next throw</td>\n          </tr>\n          <tr>\n            <td></td><td>0-9</td><td>You knocked down this many pins, <b>not</b> all the pins</td><td>The number of pins you knocked down</td>\n          </tr>\n        </tbody>\n        </table>\n      </div>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}