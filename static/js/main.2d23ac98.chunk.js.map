{"version":3,"sources":["components/Player.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Player","componentDidMount","props","id","focus","addEventListener","e","key","preventDefault","index","parseInt","nextPlayer","document","querySelector","firstRoll","createFrames","rolls","map","roll","i","className","name","type","value","onChange","handleUpdateRoll","ref","input","placeholder","determineNextFocus","target","toUpperCase","sumFrames","nonBonusFramesCount","message","rollsAsStrings","rollsAsNumbers","match","rollsAsNumbersWithoutNulls","filter","x","slice","length","extraPoints","forEach","char","nonBonusRolls","reduce","sum","current","sumAllFrames","framesToCount","directFocusToChild","querySelectorAll","push","lastNumber","nextRollIndex","ids","split","rollIndex","playerIndex","determineNextFocusLastFrame","console","log","click","onClick","this","playerName","handleNameChange","handleDeletePlayer","unused","sumFramesFunction","React","Component","_","require","Game","makeAllRolls","newPlayer","state","players","cloneDeep","handleAddPlayer","playersCopy","setState","splice","player","App","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oPAEqBA,E,2MAEnBC,kBAAoB,WAClB,iBAAa,EAAKC,MAAMC,KAAMC,QAC9B,iBAAa,EAAKF,MAAMC,KAAME,iBAAiB,UAAU,SAAAC,GACvD,GAAW,QAARA,EAAEC,KAAuB,UAARD,EAAEC,IAAc,CAClCD,EAAEE,iBACF,IAAMC,EAAQC,SAAS,EAAKR,MAAMC,IAC5BQ,EAAaC,SAASC,cAAT,gBAAgCJ,EAAQ,IAC3D,GAAGE,EAAYA,EAAWP,YACtB,CACF,IAAMU,EAAYF,SAASC,cAAc,aACtCC,GAAWA,EAAUV,a,EAMhCD,GAAK,SAACM,GAAD,gBAAc,EAAKP,MAAMC,GAAzB,YAA+BM,I,EAEpCM,aAAe,WACb,OAAO,EAAKb,MAAMc,MAAMC,IAAK,SAACC,EAAKC,GACjC,OAAO,0BAAMC,UAAU,OAAOb,IAAK,EAAKJ,GAAGgB,IACzC,2BAAOhB,GAAE,eAAU,EAAKA,GAAGgB,IAAMZ,IAAK,EAAKJ,GAAGgB,GAAIE,KAAK,OAAOC,KAAK,OAAOC,MAAO,EAAKrB,MAAMc,MAAMG,GAClGK,SAAU,EAAKC,iBAAkBC,IAAK,SAAAC,GAAK,OAAI,iBAAa,EAAKxB,GAAGgB,KAAQQ,GAE5EC,YAAa,EAAKzB,GAAGgB,S,EAM3BM,iBAAmB,SAACnB,GAClB,EAAKJ,MAAMuB,iBAAiBnB,GAC5B,EAAKuB,mBAAmBvB,EAAGA,EAAEwB,OAAOP,MAAMQ,gB,EAG5CC,UAAY,WAAuD,IAAtDC,EAAqD,uDAA/B,GAAIC,EAA2B,uDAAjB,aACzCC,EAAc,YAAO,EAAKjC,MAAMc,OAChCoB,EAAiBD,EAAelB,IAAI,SAACC,EAAKC,GAC9C,OAAGD,EAAKmB,MAAM,SAAiB3B,SAASQ,GACzB,MAAPA,EAAmB,GACZ,MAAPA,EAAoB,GAAKR,SAASyB,EAAehB,EAAE,IAC/C,OAERmB,EAA6BF,EAAeG,OAAO,SAAAC,GAAC,QAAIA,IAE9D,GAAGJ,EAAeK,MAAM,EAAER,GAAqBM,OAAO,SAAAC,GAAC,QAAIA,IAAGE,OAAS,EAAE,CAEvE,IAAIC,EAAc,EAClBR,EAAeM,MAAM,EAAER,GAAqBM,OAAO,SAAAC,GAAC,QAAIA,IAAGI,QAAQ,SAACC,EAAK1B,GAC7D,MAAP0B,EACDF,IAAiBL,EAA2BnB,EAAE,IAAM,IAAMmB,EAA2BnB,EAAE,IAAM,GAC/E,MAAP0B,IACPF,GAAgBL,EAA2BnB,EAAE,IAAM,KAIvD,IAAM2B,EAAgBV,EAAeK,MAAM,EAAER,GAE7C,OAAOa,EAAcC,OAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAIC,IAAWN,EAEvD,OAAOT,G,EAGfgB,aAAe,WAA6B,IAA5BhB,EAA2B,uDAAjB,aAClBiB,EAAuC,MAAvB,EAAKjD,MAAMc,MAAM,IAAY,GAAK,GACxD,OAAO,EAAKgB,UAAUmB,EAAejB,I,EAGvCkB,mBAAqB,SAAC9C,GACpB,IAAIU,EAAQ,GAEZ,GADAV,EAAEwB,OAAOuB,iBAAiB,eAAeT,QAAQ,SAAAjB,GAAK,OAAEX,EAAMsC,KAAK3B,EAAMJ,SACvD,KAAfP,EAAM0B,OAAY,CAQnB,IAAMa,GADNvC,GANAA,EAAQA,EAAMC,IAAI,SAACC,EAAKC,GACtB,OAAMA,EAAE,IAAI,GAAS,KAAJA,IAAWD,EAAKmB,MAAM,YACtClB,EAAE,IAAI,GAAMD,EAAKmB,MAAM,WACjBnB,EACG,MAEEqB,OAAO,SAACrB,EAAMC,GAAP,OAAaD,GAAQF,EAAMG,EAAE,MACzBH,EAAM0B,OAAO,GAClCc,EAAiBD,GAAcA,EAAWlB,MAAM,MAASrB,EAAM0B,OAAS,EAAI1B,EAAM0B,OACnFc,EAAc,KAAIA,EAAc,IAEnC,iBAAa,EAAKtD,MAAMC,GAAxB,YAA8BqD,IAAiBpD,U,EAInDyB,mBAAqB,SAACvB,EAAGiD,GACvB,GAAgB,KAAbA,EAAH,CACA,IAAME,EAAMnD,EAAEwB,OAAO3B,GAAGuD,MAAM,KACxBC,EAAYjD,SAAS+C,EAAI,IACzBG,EAAclD,SAAS+C,EAAI,IACjC,GAAGE,GAAW,GAAI,EAAKE,4BAA4BvD,EAAGiD,QACjD,GAAGI,EAAU,IAAI,GAAgC,MAA3BJ,EAAWxB,cAAoB,CACxD+B,QAAQC,IAAI,KACZ,IAAMpD,EAAaC,SAASC,cAAT,kBAAkC+C,EAAc,IAChEjD,EAAYA,EAAWqD,QACrBpD,SAASC,cAAc,aAAamD,aAEzCF,QAAQC,IAAI,aACZ,iBAAaH,EAAb,YAA4BD,EAAU,IAAKvD,U,EAI/CyD,4BAA8B,SAACvD,EAAGiD,GAChC,IAAME,EAAMnD,EAAEwB,OAAO3B,GAAGuD,MAAM,KACxBC,EAAYjD,SAAS+C,EAAI,IACzBG,EAAclD,SAAS+C,EAAI,IAEjC,GAAkB,KAAdE,GAAiC,KAAZA,IAAmBJ,EAAWlB,MAAM,OAAS,EAAKnC,MAAMc,MAAM,IAAIqB,MAAM,OAC/F,iBAAauB,EAAb,YAA4BD,EAAY,IAAKvD,YAC1C,CACH,IAAMO,EAAaC,SAASC,cAAT,kBAAkC+C,EAAc,IAChEjD,EAAYA,EAAWqD,QACrBpD,SAASC,cAAc,aAAcmD,U,wEAIrC,IAAD,OACN,OACE,yBAAK5C,UAAU,SAAS6C,QAASC,KAAKd,mBAAoBjD,GAAE,iBAAY+D,KAAKhE,MAAMC,KACjF,2BAAOoB,MAAO2C,KAAKhE,MAAMiE,WAAY9C,KAAK,YAAYlB,GAAE,eAAU+D,KAAKhE,MAAMC,IAAMiB,UAAU,YAC7FI,SAAU0C,KAAKhE,MAAMkE,iBAAkBxC,YAAY,cAAcF,IAAK,SAAAC,GAAK,OAAI,EAAK,QAAD,OAAS,EAAKzB,MAAMC,KAAQwB,KAE/G,4BAAQsC,QAAS,kBAAM,EAAK/D,MAAMmE,mBAAmB,EAAKnE,MAAMC,MAAhE,UAA6E+D,KAAKhE,MAAMiE,YACxF,yBAAK/C,UAAU,cACZ8C,KAAKnD,eACN,uBAAGK,UAAU,OACV8C,KAAKhB,gBAEPgB,KAAKhE,MAAMc,MAAMyB,OAAOyB,KAAKhE,MAAMc,MAAM0B,OAAS,GAAK,GAAGzB,IAAI,SAACqD,EAAQnD,GACtE,IAAMoD,EAA2B,IAANpD,EAAW,EAAK+B,aAAa,KAAO,EAAKlB,UAAY,EAAFb,EAAI,EAAG,KACrF,OAAO,yBAAKZ,IAAKY,EAAGhB,GAAIgB,GAAM,EAAKjB,MAAMc,MAAQ,EAAFG,GAAOoD,EAAoB,a,GAtIlDC,IAAMC,WCCtCC,EAAIC,EAAQ,IAEKC,E,2MAEnBC,aAAe,WAEb,IADA,IAAM7D,EAAQ,GACNG,EAAE,EAAEA,EAAG,GAAQA,IAAMH,EAAMsC,KAAK,IACxC,MAAM,GAAN,OAAWtC,I,EAGb8D,UAAY,CAACzD,KAAK,GAAGL,MAAM,EAAK6D,gB,EAEhCE,MAAQ,CACNC,QAAS,CACPN,EAAEO,UAAU,EAAKH,a,EAIrBI,gBAAkB,WAChB,IAAMC,EAAW,YAAO,EAAKJ,MAAMC,SACnCG,EAAY7B,KAAKoB,EAAEO,UAAU,EAAKH,YAClC,EAAKM,SAAS,CAACJ,QAASG,K,EAG1Bf,iBAAmB,SAAC9D,GAClB,IAAMG,EAAQC,SAASJ,EAAEwB,OAAO3B,GAAGuD,MAAM,KAAK,IACxCyB,EAAcT,EAAEO,UAAU,EAAKF,MAAMC,SAC3CG,EAAY1E,GAAOY,KAAOf,EAAEwB,OAAOP,MAAMQ,cACzC,EAAKqD,SAAS,CAACJ,QAASG,K,EAG1Bd,mBAAqB,SAAC5D,GACpB,IAAM0E,EAAW,YAAO,EAAKJ,MAAMC,SACnCG,EAAYE,OAAO5E,EAAO,GAC1B,EAAK2E,SAAS,CAACJ,QAASG,K,EAG1B1D,iBAAmB,SAACnB,GAClB,IAAMiD,EAAajD,EAAEwB,OAAOP,MAAMjB,EAAEwB,OAAOP,MAAMmB,OAAQ,IAAM,GACzDvC,EAAKG,EAAEwB,OAAO3B,GAAGuD,MAAM,KACvBE,EAAclD,SAASP,EAAG,IAC1BwD,EAAYjD,SAASP,EAAG,IAC9B,IAAMwD,EAAU,IAAI,GAAiB,KAAZA,IAAmBJ,EAAWlB,MAAM,YACxDsB,EAAU,IAAI,GAAMJ,EAAWlB,MAAM,YACzB,KAAfkB,EACA,CACA,IAAM4B,EAAcT,EAAEO,UAAU,EAAKF,MAAMC,SAC3CG,EAAYvB,GAAa5C,MAAM2C,GAAaJ,EAAWxB,cACvD,EAAKqD,SAAS,CAACJ,QAASG,M,wEAInB,IAAD,OACN,OACE,yBAAK/D,UAAU,QACb,4BAAQ6C,QAASC,KAAKgB,iBAAtB,cACChB,KAAKa,MAAMC,QAAQ/D,IAAI,SAACqE,EAAQnE,GAAT,OAAa,kBAAE,EAAF,CAASgD,WAAYmB,EAAOjE,KAAML,MAAOsE,EAAOtE,MAAOT,IAAKY,EAAGhB,GAAIgB,EACtGiD,iBAAkB,EAAKA,iBAAkBC,mBAAoB,EAAKA,mBAClE5C,iBAAkB,EAAKA,0B,GAxDC+C,IAAMC,WCQzBc,MATf,WAEE,OACE,yBAAKnE,UAAU,OACb,kBAAC,EAAD,QCIcoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStD,MACvB,2DCZNuD,IAASC,OAAO,kBAAC,EAAD,MAASjF,SAASkF,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB","file":"static/js/main.2d23ac98.chunk.js","sourcesContent":["import React from 'react'\n\nexport default class Player extends React.Component{\n\n  componentDidMount = () => {\n    this[`name-${this.props.id}`].focus()\n    this[`name-${this.props.id}`].addEventListener('keydown',e =>{\n      if(e.key===\"Tab\" || e.key===\"Enter\"){\n        e.preventDefault()\n        const index = parseInt(this.props.id)\n        const nextPlayer = document.querySelector(`#name-${index + 1}`)\n        if(nextPlayer){nextPlayer.focus()}\n        else{\n          const firstRoll = document.querySelector(\"#roll-0-0\")\n          if(firstRoll){firstRoll.focus()}\n        }\n      }\n    })\n  }\n\n  id = (index) => `${this.props.id}-${index}`\n\n  createFrames = () => {\n    return this.props.rolls.map( (roll,i) =>{\n      return <span className='roll' key={this.id(i)}>\n        <input id={`roll-${this.id(i)}`} key={this.id(i)} name='roll' type='text' value={this.props.rolls[i]} \n        onChange={this.handleUpdateRoll} ref={input => this[`roll-${this.id(i)}`] = input} \n        // disabled={( (this.props.rolls[i-1]==='X' && i<19)) ? true : false} \n        placeholder={this.id(i)}\n        />\n      </span>\n    })\n  }\n\n  handleUpdateRoll = (e) => {\n    this.props.handleUpdateRoll(e)\n    this.determineNextFocus(e, e.target.value.toUpperCase())\n  }\n\n  sumFrames = (nonBonusFramesCount = 20, message = 'Start Game') => {\n    const rollsAsStrings = [...this.props.rolls]\n    const rollsAsNumbers = rollsAsStrings.map((roll,i)=>{\n      if(roll.match(/[0-9]/)){return parseInt(roll)}\n      else if(roll==='X'){return 10}\n      else if(roll==='/'){return (10 - parseInt(rollsAsStrings[i-1]))}\n      else{return null}\n    })\n    const rollsAsNumbersWithoutNulls = rollsAsNumbers.filter(x=>!!x) // WithoutNulls versions allow easy traversal for spare and strike bonus points\n\n    if(rollsAsNumbers.slice(0,nonBonusFramesCount).filter(x=>!!x).length > 0){ // otherwise this block throws an error\n\n      let extraPoints = 0\n      rollsAsStrings.slice(0,nonBonusFramesCount).filter(x=>!!x).forEach((char,i) => {\n        if(char==='X'){\n          extraPoints += ((rollsAsNumbersWithoutNulls[i+1] || 0) + (rollsAsNumbersWithoutNulls[i+2] || 0)) // trailing 0s prevent NaN return for incomplete game\n        }else if(char==='/'){\n          extraPoints += (rollsAsNumbersWithoutNulls[i+1] || 0) // trailing 0s prevent NaN return for incomplete game\n        }\n      })\n\n      const nonBonusRolls = rollsAsNumbers.slice(0,nonBonusFramesCount) // .splice(0,18) good for strike on 18, otherwise .splice(0,20)\n\n      return nonBonusRolls.reduce((sum, current)=>sum+current) + extraPoints\n\n    }else{return message}\n  }\n\n  sumAllFrames = (message = 'Start Game') => {\n    const framesToCount = this.props.rolls[18]==='X' ? 19 : 20\n    return this.sumFrames(framesToCount, message)\n  }\n\n  directFocusToChild = (e) => {\n    let rolls = []\n    e.target.querySelectorAll('.roll input').forEach(input=>rolls.push(input.value))\n    if(rolls.length===21){\n      rolls = rolls.map((roll,i)=>{\n        if( ((i%2===0 || i===19) && roll.match(/[0-9x]/i) ) || // only the first throw/roll of each frame can have a strike X except the last frame\n        (i%2===1) && roll.match(/[0-9/]/) // 2nd throws/rolls of each frames can have spares / but not strikes X\n      ){return roll}\n      else{return ''}\n      })\n      rolls = rolls.filter((roll, i) => roll || rolls[i+1])\n      const lastNumber = rolls[rolls.length-1]\n      let nextRollIndex = (lastNumber && lastNumber.match(/X/i)) ? rolls.length + 1 : rolls.length\n      if(nextRollIndex>20){nextRollIndex=20}\n\n      this[`roll-${this.props.id}-${nextRollIndex}`].focus()\n    }\n  }\n\n  determineNextFocus = (e, lastNumber) => {\n    if(lastNumber===''){return}\n    const ids = e.target.id.split('-')\n    const rollIndex = parseInt(ids[2])\n    const playerIndex = parseInt(ids[1])\n    if(rollIndex>=18){this.determineNextFocusLastFrame(e, lastNumber)}\n    else if(rollIndex%2===1 || lastNumber.toUpperCase()==='X'){\n      console.log(114)\n      const nextPlayer = document.querySelector(`#player-${playerIndex + 1}`)\n      if(nextPlayer){nextPlayer.click()}\n      else(document.querySelector(\"#player-0\").click())\n    }else{\n      console.log('next roll')\n      this[`roll-${playerIndex}-${rollIndex+1}`].focus()\n    }\n  }\n  \n  determineNextFocusLastFrame = (e, lastNumber) => {\n    const ids = e.target.id.split('-')\n    const rollIndex = parseInt(ids[2])\n    const playerIndex = parseInt(ids[1])\n\n    if( rollIndex === 18 || (rollIndex===19 && (lastNumber.match(/\\//) || this.props.rolls[18].match(/X/i)))){\n      this[`roll-${playerIndex}-${rollIndex + 1}`].focus()\n    }else{\n      const nextPlayer = document.querySelector(`#player-${playerIndex + 1}`)\n      if(nextPlayer){nextPlayer.click()}\n      else(document.querySelector(\"#player-0\")).click()   \n    }\n  }\n\n  render(){\n    return(\n      <div className=\"player\" onClick={this.directFocusToChild} id={`player-${this.props.id}`}>\n        <input value={this.props.playerName} name='nameInput' id={`name-${this.props.id}`} className='nameInput'\n        onChange={this.props.handleNameChange} placeholder='Player Name' ref={input => this[`name-${this.props.id}`] = input} \n        />\n        <button onClick={() => this.props.handleDeletePlayer(this.props.id)}>Delete {this.props.playerName}</button>\n        <div className='playerGame'>\n          {this.createFrames()}\n          <p className='sum'>\n            {this.sumAllFrames()}\n          </p>\n          {this.props.rolls.slice((this.props.rolls.length + 1) / 2).map((unused, i)=>{\n            const sumFramesFunction = (i === 9) ? this.sumAllFrames('_') : this.sumFrames(i*2+2, '_')\n            return <div key={i} id={i}>{!!this.props.rolls[i*2] ? sumFramesFunction : '_'}</div>\n          })}\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport Player from './Player'\n\nvar _ = require('lodash');\n\nexport default class Game extends React.Component{\n\n  makeAllRolls = () => {\n    const rolls = []\n    for(let i=0;i<(10*2)+1;i++){ rolls.push('') } // 10 frames of 2 throws/rolls max, plus 2 extra at the end\n    return [...rolls]\n  }\n\n  newPlayer = {name:'',rolls:this.makeAllRolls()}\n\n  state = {\n    players: [\n      _.cloneDeep(this.newPlayer)\n    ]\n  }\n\n  handleAddPlayer = () => {\n    const playersCopy = [...this.state.players] // only shallow copy needed\n    playersCopy.push(_.cloneDeep(this.newPlayer))\n    this.setState({players: playersCopy})\n  }\n\n  handleNameChange = (e) => {\n    const index = parseInt(e.target.id.split('-')[1])\n    const playersCopy = _.cloneDeep(this.state.players) // deep copy needed\n    playersCopy[index].name = e.target.value.toUpperCase()\n    this.setState({players: playersCopy})\n  }\n\n  handleDeletePlayer = (index) => {\n    const playersCopy = [...this.state.players]\n    playersCopy.splice(index, 1)\n    this.setState({players: playersCopy})\n  }\n\n  handleUpdateRoll = (e) => { // keyDown eventListeners don't work on Android\n    const lastNumber = e.target.value[e.target.value.length -1] || '' // the '' is for delete button\n    const id = e.target.id.split('-')\n    const playerIndex = parseInt(id[1])\n    const rollIndex = parseInt(id[2])\n    if( ((rollIndex%2===0 || rollIndex===19) && lastNumber.match(/[0-9x]/i) ) || // only the first throw/roll of each frame can have a strike X except the last frame\n      ( (rollIndex%2===1) && lastNumber.match(/[0-9/]/) ) || // 2nd throws/rolls of each frames can have spares / but not strikes X\n      lastNumber === ''\n    ) {\n      const playersCopy = _.cloneDeep(this.state.players)\n      playersCopy[playerIndex].rolls[rollIndex] = lastNumber.toUpperCase()\n      this.setState({players: playersCopy})\n    }\n  }\n\n  render(){\n    return(\n      <div className='game'>\n        <button onClick={this.handleAddPlayer}>Add Player</button>\n        {this.state.players.map((player, i)=>< Player playerName={player.name} rolls={player.rolls} key={i} id={i} \n          handleNameChange={this.handleNameChange} handleDeletePlayer={this.handleDeletePlayer}\n          handleUpdateRoll={this.handleUpdateRoll}\n          />)}\n      </div>\n    )\n  }\n\n}","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}